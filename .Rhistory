# moving average
lines(ma, col='purple', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 1050
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 1500
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 1650
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 1750
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 1850
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 1950
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2050
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2150
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2250
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2350
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2450
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# loess, span of 0.639%
l <- loess(value~time, data=df, span=.00639, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2550
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
lines(ma, col='purple', lwd=2.8)
# loess, span of 0.639%
l <- loess(value~time, data=df, span=.00639, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2650
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2650
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 2600
end <- start + 99
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
text(time, value, labels=index(value), cex=0.7, pos=3)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# moving average
lines(ma, col='purple', lwd=2.8)
# loess
l <- loess(value~time, data=df, span=.004, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.00414, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.005, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.006, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.00639, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.007, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.00750, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.008, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.0085, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.009, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.01, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.02, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.03, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.04, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.05, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 250
end <- 300
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=4, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 300
end <- 400
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=4, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 0
end <- 2662
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=4, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
start <- 0
end <- 2662
plot(value[start:end]~time[start:end],
cex=1.2,
xlab='Time',
ylab='Value')
# loess
l <- loess(value~time, data=df, span=.004, degree=2, family='symmetric')
lines(l$fitted~time, col='dodgerblue3', lwd=2.8)
runApp("app")
library(shiny)
runApp("app")
?shiny
runApp("~/app")
shiny::runApp('Documents/Projects/outliers/app')
runApp("app")
runGitHub("loess", "caremorris")
setwd("~/Documents/Projects/outliers")
runApp("app")
runApp("app", display.mode="showcase")
x<-c(1,2,3)
2 in x
2 %in% x
shiny::runApp('app')
?checkboxGroupInput
?checkboxGroupInput
shiny::runApp('app')
shiny::runApp('app')
?columnb
?column
shiny::runApp('app')
?numericInput
shiny::runApp('app')
shiny::runApp('app')
shiny::runApp('app')
length(mm)
library(jsonlite)
library(zoo)
URL <- "/Users/carolyn/Desktop/mason.tank.may.2013.json"
tank <- fromJSON(URL) # list
mydata <- tank$series$data # list
d <- mydata[[1]] # matrix (2 columns)
dframe <- as.data.frame(d) # data frame (coercion)
#head(dframe)
#str(dframe)
#summary(dframe)
time <- d[,1] # numeric
value <- d[,2] # numeric
# convert from timestamp to human readable
time <- as.POSIXct(time, origin="1970-01-01", tz="GMT")
#boxplot.stats(value, coef=0.75, do.out=T)
m <- cbind(value, time)
df <- as.data.frame(m)
# plot it with a LOESS smooth curve
ts <- zoo(value, time)
ma <- rollmean(ts, 5)
mm <- rollmedian(ts, 5)
length(mm)
length(ma)
class(mm)
shiny::runApp('app')
length(mm)
length(ma)
length(ts)
ma <- rollmean(ts, 5, align="left")
mm <- rollmedian(ts, 5)
length(mm)
length(ma)
length(ts)
head(ma)
head(ts)
shiny::runApp('app')
x<-c(1,2,3)
length(x)
x[1:2]
y<-c(1,2,3,4)
y[1:length(x)]
shiny::runApp('app')
